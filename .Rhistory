abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space")
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space")
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space")
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
plot(param.space,posterior,type="l",col="blue",lwd=2)
posterior <- dbeta(param.space,1+data,1+(10-data))
plot(param.space,posterior,type="l",col="blue",lwd=2)
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
plot(param.space,posterior,type="l",col="blue",lwd=2)
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
curve(dunif(x),ylim=c(0,2),col="red")
hist(runif(10000),freq=F,ylim=c(0,2),col="red")
curve(dbeta(x,1,1),ylim=c(0,2),col="red")
hist(rbeta(10000,1,1),freq=F,ylim=c(0,2),col="red")
data = 3
param.space <- seq(0,1,by=0.001)
likelihood <- dbinom(data,size=10,prob=param.space)
par(mai=c(1,1,0,1))
curve(dbeta(x,1,1),ylim=c(0,2),col="blue",ylab="Probability density",xlab="param.space")
points(param.space,likelihood*5,type="l",col="red",lwd=2)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=1,shape2=1)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior      # Numerator for Bayes rule
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant   # this is Bayes' rule!
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)  # convert posterior to probability density
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=1,shape2=1)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior      # Numerator for Bayes rule
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant   # this is Bayes' rule!
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)  # convert posterior to probability density
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=15,shape2=5)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=150,shape2=50)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,15),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
### PRIOR
curve(dbeta(x,1,1),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,15,5),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,15+data,5+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,150,50),ylim=c(0,15),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,150+data,50+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
curve(dunif(x),ylim=c(0,2),col="red")
hist(runif(10000),freq=F,ylim=c(0,2),col="red")
curve(dbeta(x,1,1),ylim=c(0,2),col="red")
hist(rbeta(10000,1,1),freq=F,ylim=c(0,2),col="red")
data = 3
param.space <- seq(0,1,by=0.001)
likelihood <- dbinom(data,size=10,prob=param.space)
par(mai=c(1,1,0,1))
curve(dbeta(x,1,1),ylim=c(0,2),col="blue",ylab="Probability density",xlab="param.space")
points(param.space,likelihood*5,type="l",col="red",lwd=2)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
data = 3
param.space <- seq(0,1,by=0.001)
likelihood <- dbinom(data,size=10,prob=param.space)
par(mai=c(1,1,0,1))
curve(dbeta(x,1,1),ylim=c(0,2),col="blue",ylab="Probability density",xlab="param.space")
points(param.space,likelihood*5,type="l",col="red",lwd=2)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=1,shape2=1)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior      # Numerator for Bayes rule
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant   # this is Bayes' rule!
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)  # convert posterior to probability density
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=15,shape2=5)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=150,shape2=50)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,15),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
### PRIOR
curve(dbeta(x,1,1),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,15,5),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,15+data,5+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,150,50),ylim=c(0,15),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,150+data,50+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
param.space
plot(param.space,posterior,type="l",col="blue",lwd=2)
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### CREDIBLE INTERVAL
credible.interval <- qbeta(c(0.025,0.975),1+data,1+(10-data))     # get the credible interval
abline(v=credible.interval,col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### CREDIBLE INTERVAL
credible.interval <- qbeta(c(0.025,0.975),1+data,1+(10-data))     # get the credible interval
abline(v=credible.interval,col=gray(0.5),lwd=3,lty=2)   # add to plot
library(emdbook)
MyxDat <- MyxoTiter_sum
Myx <- subset(MyxDat,grade==1)
head(Myx)
hist(Myx$titer,freq=FALSE)
hist(Myx$titer,freq=FALSE)
curve(dgamma(x,shape=40,scale=0.15),add=T,col="red")
GammaLikelihoodFunction <- function(params){
prod(dgamma(Myx$titer,shape=params['shape'],scale=params['scale']))
}
params <- c(40,0.15)
names(params) <- c("shape","scale")
params
GammaLikelihoodFunction(params)
##############
# define 2-D parameter space!
##############
shapevec <- seq(10,100,by=0.1)
scalevec <- seq(0.01,0.3,by=0.001)
##############
# define the likelihood surface across this grid within parameter space
##############
likelihood2D <- matrix(nrow=length(shapevec),ncol=length(scalevec))   # initialize storage variable
newparams <- params
for(i in 1:length(shapevec)){
newparams['shape'] <- shapevec[i]
for(j in 1:length(scalevec)){
newparams['scale'] <- scalevec[j]
likelihood2D[i,j] <- GammaLikelihoodFunction(newparams)
}
}
############
# Visualize the likelihood surface
############
image(x=shapevec,y=scalevec,z=likelihood2D,zlim=c(1e-70,1e-17),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=likelihood2D,levels=c(1e-18,1e-17),add=T)
pixelArea <- 0.0001  # for determining probability densities
##############
# define the prior probability surface across this grid within parameter space
##############
prior2D <- matrix(1, nrow=length(shapevec),ncol=length(scalevec))   # initialize prior
prior2D <- prior2D/length(prior2D)
############
# Visualize the 2-D prior distribution
############
image(x=shapevec,y=scalevec,z=prior2D,zlim=c(0,0.001),col=rainbow(10))
weighted.likelihood <- prior2D * likelihood2D    # numerator of Bayes rule
normalization.constant <- sum(weighted.likelihood)    # denominator of Bayes rule
posterior2D <- weighted.likelihood/normalization.constant
############
# Visualize the 2-D posterior distribution
############
image(x=shapevec,y=scalevec,z=(posterior2D/pixelArea),zlim=c(0,5),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=(posterior2D/pixelArea),levels=c(1:4),add=T,drawlabels=FALSE)
possible.contours <- data.frame(contour = seq(0.13e-4,1e-4,length=100), quantile = NA)
i=1
for(i in 1:nrow(possible.contours)){
ndx <- which(posterior2D<possible.contours$contour[i],arr.ind = T)
possible.contours$quantile[i] <- sum(posterior2D[ndx])
}
head(possible.contours,10)
q95 <- 1.739394e-05
image(x=shapevec,y=scalevec,z=posterior2D,zlim=c(0.5e-11,5e-4),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=posterior2D,levels=q95,add=T,lwd=3,col="red",drawlabels=FALSE)
image(x=shapevec,y=scalevec,z=posterior2D,zlim=c(0.5e-11,5e-4),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=posterior2D,levels=q95,add=T,lwd=3,col="red",drawlabels=FALSE)
meanshape <- sum(shapevec*posterior2D)
meanscale <- sum(scalevec*posterior2D)
points(meanshape,meanscale,pch=20,cex=2,col="red")
marginal.dist.shape <- apply(posterior2D,1,mean)
plot(shapevec,(marginal.dist.shape/sum(marginal.dist.shape))/0.1,type="l",lwd=2,col="blue",ylab="probability density",main="Posterior probability")
abline(v=meanshape)
marginal.dist.scale <- apply(posterior2D,2,mean)
plot(scalevec,(marginal.dist.scale/sum(marginal.dist.scale))/0.001,type="l",lwd=2,col="blue",ylab="probability density",main="Posterior probability")
abline(v=meanscale)
meanshape
meanscale
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
curve(dunif(x),ylim=c(0,2),col="red")
hist(runif(10000),freq=F,ylim=c(0,2),col="red")
curve(dbeta(x,1,1),ylim=c(0,2),col="red")
hist(rbeta(10000,1,1),freq=F,ylim=c(0,2),col="red")
data = 3
param.space <- seq(0,1,by=0.001)
likelihood <- dbinom(data,size=10,prob=param.space)
par(mai=c(1,1,0,1))
curve(dbeta(x,1,1),ylim=c(0,2),col="blue",ylab="Probability density",xlab="param.space")
points(param.space,likelihood*5,type="l",col="red",lwd=2)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=1,shape2=1)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior      # Numerator for Bayes rule
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant   # this is Bayes' rule!
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)  # convert posterior to probability density
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=15,shape2=5)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,5),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
prior <- dbeta(param.space,shape1=150,shape2=50)
#prior
## weight the data likelihood by the prior
weighted.likelihood <- likelihood*prior
## compute normalization constant
normalization.constant <- sum(weighted.likelihood)
## Posterior!!
posterior <- weighted.likelihood/normalization.constant
## Plot it out!
par(mai=c(1,1,0,1))
plot(param.space,prior,ylim=c(0,15),type="l",lwd=1,lty=2,col="blue",ylab="Probability Density",xlab="param.space")
points(param.space,posterior*length(param.space),type="l",col="blue",lwd=2,lty=1)
points(param.space,likelihood*5,type="l",col="red",lwd=1)
axis(4,at=seq(0,2,by=0.4),labels = seq(0,0.5,by=.1))
mtext("Likelihood", side=4, col="red",line=3)
### PRIOR
curve(dbeta(x,1,1),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,15,5),ylim=c(0,5),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,15+data,5+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### PRIOR
curve(dbeta(x,150,50),ylim=c(0,15),ylab="Prob Density",col="blue",lwd=1,lty=2,xlab="param.space")
### POSTERIOR
curve(dbeta(x,150+data,50+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
posterior <- dbeta(param.space,1+data,1+(10-data))
mean <- mean(rbeta(10000,1+data,1+(10-data)))
mode <- param.space[which.max(posterior)]
plot(param.space,posterior,type="l",col="blue",lwd=2)
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
### POSTERIOR
curve(dbeta(x,1+data,1+(10-data)),ylim=c(0,4),ylab="Prob Density",col="blue",lwd=2,lty=1,xlab="param.space",add=T)
### CREDIBLE INTERVAL
credible.interval <- qbeta(c(0.025,0.975),1+data,1+(10-data))     # get the credible interval
abline(v=credible.interval,col=gray(0.5),lwd=3,lty=2)   # add to plot
library(emdbook)
MyxDat <- MyxoTiter_sum
Myx <- subset(MyxDat,grade==1)
head(Myx)
hist(Myx$titer,freq=FALSE)
hist(Myx$titer,freq=FALSE)
curve(dgamma(x,shape=40,scale=0.15),add=T,col="red")
GammaLikelihoodFunction <- function(params){
prod(dgamma(Myx$titer,shape=params['shape'],scale=params['scale']))
}
params <- c(40,0.15)
names(params) <- c("shape","scale")
params
GammaLikelihoodFunction(params)
##############
# define 2-D parameter space!
##############
shapevec <- seq(10,100,by=0.1)
scalevec <- seq(0.01,0.3,by=0.001)
##############
# define the likelihood surface across this grid within parameter space
##############
likelihood2D <- matrix(nrow=length(shapevec),ncol=length(scalevec))   # initialize storage variable
newparams <- params
for(i in 1:length(shapevec)){
newparams['shape'] <- shapevec[i]
for(j in 1:length(scalevec)){
newparams['scale'] <- scalevec[j]
likelihood2D[i,j] <- GammaLikelihoodFunction(newparams)
}
}
############
# Visualize the likelihood surface
############
image(x=shapevec,y=scalevec,z=likelihood2D,zlim=c(1e-70,1e-17),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=likelihood2D,levels=c(1e-18,1e-17),add=T)
pixelArea <- 0.0001  # for determining probability densities
##############
# define the prior probability surface across this grid within parameter space
##############
prior2D <- matrix(1, nrow=length(shapevec),ncol=length(scalevec))   # initialize prior
prior2D <- prior2D/length(prior2D)
############
# Visualize the 2-D prior distribution
############
image(x=shapevec,y=scalevec,z=prior2D,zlim=c(0,0.001),col=rainbow(10))
weighted.likelihood <- prior2D * likelihood2D    # numerator of Bayes rule
normalization.constant <- sum(weighted.likelihood)    # denominator of Bayes rule
posterior2D <- weighted.likelihood/normalization.constant
############
# Visualize the 2-D posterior distribution
############
image(x=shapevec,y=scalevec,z=(posterior2D/pixelArea),zlim=c(0,5),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=(posterior2D/pixelArea),levels=c(1:4),add=T,drawlabels=FALSE)
possible.contours <- data.frame(contour = seq(0.13e-4,1e-4,length=100), quantile = NA)
i=1
for(i in 1:nrow(possible.contours)){
ndx <- which(posterior2D<possible.contours$contour[i],arr.ind = T)
possible.contours$quantile[i] <- sum(posterior2D[ndx])
}
head(possible.contours,10)
q95 <- 1.739394e-05
image(x=shapevec,y=scalevec,z=posterior2D,zlim=c(0.5e-11,5e-4),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=posterior2D,levels=q95,add=T,lwd=3,col="red",drawlabels=FALSE)
image(x=shapevec,y=scalevec,z=posterior2D,zlim=c(0.5e-11,5e-4),col=topo.colors(12))
contour(x=shapevec,y=scalevec,z=posterior2D,levels=q95,add=T,lwd=3,col="red",drawlabels=FALSE)
meanshape <- sum(shapevec*posterior2D)
meanscale <- sum(scalevec*posterior2D)
points(meanshape,meanscale,pch=20,cex=2,col="red")
marginal.dist.shape <- apply(posterior2D,1,mean)
plot(shapevec,(marginal.dist.shape/sum(marginal.dist.shape))/0.1,type="l",lwd=2,col="blue",ylab="probability density",main="Posterior probability")
abline(v=meanshape)
marginal.dist.scale <- apply(posterior2D,2,mean)
plot(scalevec,(marginal.dist.scale/sum(marginal.dist.scale))/0.001,type="l",lwd=2,col="blue",ylab="probability density",main="Posterior probability")
abline(v=meanscale)
meanshape
meanscale
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
param.space2 <- seq(0.001,20,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
curve(dlnorm(x,4,1),from=0.001,to=200,ylab="prob density")
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
plot(param.space2,dlnorm(param.space2,4,1),from=0.001,to=200,ylab="prob density")
plot(param.space2,dlnorm(param.space2,4,1),ylab="prob density")
plot(param.space2,skewed.posterior,type="l",ylab="prob density")
param.space2 <- seq(0.001,200,length=10000)
skewed.posterior <- dlnorm(param.space2,4,1)
mean <- mean(rlnorm(10000,4,1))
mode <- param.space2[which.max(skewed.posterior)]
plot(param.space2,skewed.posterior,type="l",ylab="prob density")
abline(v=c(mean,mode),col=gray(0.5),lwd=3,lty=2)   # add to plot
graphics.off()
